-- may 2: 

create table covid(city varchar(50),days date,cases int);

insert into covid values('DELHI','2022-01-01',100);
insert into covid values('DELHI','2022-01-02',200);
insert into covid values('DELHI','2022-01-03',300);

insert into covid values('MUMBAI','2022-01-01',100);
insert into covid values('MUMBAI','2022-01-02',100);
insert into covid values('MUMBAI','2022-01-03',300);

insert into covid values('CHENNAI','2022-01-01',100);
insert into covid values('CHENNAI','2022-01-02',200);
insert into covid values('CHENNAI','2022-01-03',150);

insert into covid values('BANGALORE','2022-01-01',100);
insert into covid values('BANGALORE','2022-01-02',300);
insert into covid values('BANGALORE','2022-01-03',200);
insert into covid values('BANGALORE','2022-01-04',400);

select * from covid;

-- problem: find the cities where covid case are increasing continously

-- solution approach 1
with a as (
select *, 
rank() over (partition by city order by cases) as rnk,
row_number() over(partition by city order by days) as row_num
from covid),
b as(
select *, 
case when rnk = row_num then 1 else 0 end as fl
from a
order by city,days),
e as(
select city, count(*) as c, sum(fl) as d from b group by 1)
select city from e where c = d;

-- solution approach 2
with a as(
select city,
cast(rank() over (partition by city order by days) as signed) - cast(rank() over (partition by city order by cases) as signed) as diff
from covid)
select city 
from a 
group by city 
having sum(diff) = 0 and min(diff) = 0;


create table company_users 
(
company_id int,
user_id int,
language varchar(20)
);

insert into company_users values (1,1,'English')
,(1,1,'German')
,(1,2,'English')
,(1,3,'German')
,(1,3,'English')
,(1,4,'English')
,(2,5,'English')
,(2,5,'German')
,(2,5,'Spanish')
,(2,6,'German')
,(2,6,'Spanish')
,(2,7,'English');


select * from company_users;

-- problem: find the company who have atleast 2 users who speak english and german both the languages.
with a as(
select * from company_users where language in ("English", "German")),
b as(
select company_id, user_id
from  a
group by company_id, user_id
having count(distinct language) = 2)
select company_id
from b
group by company_id
having count(distinct user_id) >= 2;




